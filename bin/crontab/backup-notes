#!/usr/bin/env sh

set -e

_NOTE_REPO_DIR="$HOME/Documents/github/notes"
_YOUTUBE_REPO_DIR="$HOME/Documents/github/youtube"

_is_git_repo() {
	git rev-parse --is-inside-work-tree >/dev/null 2>&1
}

_push_committed_work() {
	_current_branch=$(git rev-parse --abbrev-ref HEAD)
	_remote_name="origin"

	if ! git rev-parse --verify "$_remote_name/$_current_branch" >/dev/null 2>&1; then
		echo "INFO: Remote branch '$_remote_name/$_current_branch' not found. Assuming this branch is new or not yet pushed to this remote."
		return 0
	fi

	if [ -n "$(git rev-list "$_remote_name/$_current_branch"..HEAD 2>/dev/null)" ]; then
		echo "INFO: Found unpushed commits on '$_current_branch' in '$(basename "$(pwd)")'. Pushing to '$_remote_name'..."
		if git push "$_remote_name" "$_current_branch"; then
			echo "INFO: Successfully pushed existing commits on '$_current_branch'."
		else
			echo "ERROR: Failed to push existing commits on '$_current_branch'." >&2
			return 1
		fi
	else
		echo "INFO: Branch '$_current_branch' in '$(basename "$(pwd)")' is up-to-date with '$_remote_name/$_current_branch'. No existing commits to push."
	fi
	return 0
}

_handle_new_changes() {
	if ! git status --porcelain | grep -q .; then
		echo "INFO: Working directory in '$(basename "$(pwd)")' is clean. No new changes to commit."
		return 0
	fi

	echo "INFO: Found new changes in '$(basename "$(pwd)")'. Staging all modified/new files..."
	if ! git add -A; then
		echo "ERROR: Failed to stage changes (git add -A) in '$(basename "$(pwd)")'." >&2
		return 1
	fi

	_timestamp=$(date '+%Y-%m-%d %H:%M:%S')
	_commit_desc="vault backup: $_timestamp"
	echo "INFO: Committing changes in '$(basename "$(pwd)")' with message: '$_commit_desc'..."
	if ! git commit -m "$_commit_desc"; then
		echo "ERROR: Failed to commit changes in '$(basename "$(pwd)")'. This may be due to an empty commit or a pre-commit hook failure." >&2
		return 1
	fi

	_current_branch=$(git rev-parse --abbrev-ref HEAD)
	_remote_name="origin"
	echo "INFO: Pushing new commit on '$_current_branch' from '$(basename "$(pwd)")' to '$_remote_name'..."
	if git push "$_remote_name" "$_current_branch"; then
		echo "INFO: New changes for '$(basename "$(pwd)")' committed and pushed successfully at $_timestamp."
	else
		echo "ERROR: Failed to push new commit for '$_current_branch' from '$(basename "$(pwd)")'. The commit was made locally." >&2
		return 1
	fi
	return 0
}

_synchronize_repository() {
	_repo_directory="$1"
	_repo_identifier=$(basename "$_repo_directory")
	_original_location=$(pwd)

	echo "--- Starting synchronization for repository: '$_repo_identifier' (Location: '$_repo_directory') ---"

	if [ ! -d "$_repo_directory" ]; then
		echo "ERROR: Directory '$_repo_directory' does not exist. Skipping." >&2
		return 1
	fi
	if ! cd "$_repo_directory"; then
		echo "ERROR: Cannot change directory to '$_repo_directory'. Skipping." >&2
		return 1
	fi

	if ! _is_git_repo; then
		echo "ERROR: '$_repo_identifier' (at '$_repo_directory') is not a Git repository. Skipping." >&2
		cd "$_original_location"
		return 1
	fi

	if ! _push_committed_work; then
		echo "ERROR: Synchronization halted for '$_repo_identifier' due to issues pushing existing commits." >&2
		cd "$_original_location"
		return 1
	fi

	if ! _handle_new_changes; then
		echo "ERROR: Synchronization halted for '$_repo_identifier' due to issues processing new changes." >&2
		cd "$_original_location"
		return 1
	fi

	cd "$_original_location"
	echo "--- Successfully synchronized repository: '$_repo_identifier' ---"
	return 0
}

_main() {
	_overall_script_status=0

	if ! _synchronize_repository "$_NOTE_REPO_DIR"; then
		_overall_script_status=1
	fi
	echo ""

	if ! _synchronize_repository "$_YOUTUBE_REPO_DIR"; then
		_overall_script_status=1
	fi
	echo ""

	if [ "$_overall_script_status" -eq 0 ]; then
		echo "All specified repositories were synchronized successfully."
	else
		echo "ERROR: One or more repositories could not be synchronized completely." >&2
	fi

	return "$_overall_script_status"
}

_main
